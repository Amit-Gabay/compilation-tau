

Terminals which are not used:

   FLOAT
   ID
   PLUS
   MINUS
   AND
   OR



Grammar
rule 1    program -> expList
rule 2    expList -> exp expList
rule 3    expList -> exp
rule 4    exp -> labelExp
rule 5    exp -> jumpExp
rule 6    exp -> cjumpExp
rule 7    exp -> loadExp
rule 8    exp -> storeExp
rule 9    exp -> binopExp
rule 10   exp -> movExp
rule 11   exp -> vfTableExp
rule 12   exp -> strExp
rule 13   exp -> START_OF_CODE
rule 14   exp -> PRINT_INT
rule 15   exp -> PRINT_CHAR
rule 16   exp -> ALLOCATE
rule 17   exp -> EXIT
rule 18   labelList -> LABEL COMMA labelList
rule 19   labelList -> LABEL
rule 20   vfTableExp -> VFTABLE COLON labelList
rule 21   strExp -> STRING_VAR COLON STRING
rule 22   labelExp -> LABEL COLON
rule 23   jumpExp -> JUMP LABEL
rule 24   jumpExp -> JUMP REGISTER
rule 25   jumpExp -> JUMP_AND_LINK LABEL
rule 26   jumpExp -> JUMP_AND_LINK_REG REGISTER
rule 27   cjumpExp -> BEQ var COMMA var COMMA LABEL
rule 28   cjumpExp -> BNE var COMMA var COMMA LABEL
rule 29   cjumpExp -> BGT var COMMA var COMMA LABEL
rule 30   cjumpExp -> BLT var COMMA var COMMA LABEL
rule 31   cjumpExp -> BGE var COMMA var COMMA LABEL
rule 32   cjumpExp -> BLE var COMMA var COMMA LABEL
rule 33   loadExp -> LOAD var COMMA INT LPAREN var RPAREN
rule 34   loadExp -> LOAD_BYTE var COMMA LPAREN var RPAREN
rule 35   loadExp -> LOAD_ADDRESS var COMMA STRING_VAR
rule 36   loadExp -> LOAD_ADDRESS var COMMA VFTABLE
rule 37   loadExp -> LOAD_IMMEDIATE var COMMA INT
rule 38   storeExp -> STORE var COMMA INT LPAREN var RPAREN
rule 39   storeExp -> STORE_BYTE var COMMA LPAREN var RPAREN
rule 40   binopExp -> ADD var COMMA var COMMA var
rule 41   binopExp -> SUB var COMMA var COMMA var
rule 42   binopExp -> MUL var COMMA var COMMA var
rule 43   binopExp -> DIV var COMMA var COMMA var
rule 44   binopExp -> ADD_IMMEDIATE var COMMA var COMMA INT
rule 45   movExp -> MOVE var COMMA var
rule 46   var -> TEMP
rule 47   var -> REGISTER

Terminals, with rules where they appear

$ (-1)
error (256)
INT (258) 33 37 38 44
FLOAT (259)
STRING (260) 21
VFTABLE (261) 20 36
PRINT_INT (262) 14
PRINT_CHAR (263) 15
STRING_VAR (264) 21 35
ALLOCATE (265) 16
START_OF_CODE (266) 13
EXIT (267) 17
ID (268)
LABEL (269) 18 19 22 23 25 27 28 29 30 31 32
COMMA (270) 18 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45
COLON (271) 20 21 22
LOAD (272) 33
STORE (273) 38
LOAD_IMMEDIATE (274) 37
LOAD_ADDRESS (275) 35 36
LOAD_BYTE (276) 34
STORE_BYTE (277) 39
ADD_IMMEDIATE (278) 44
JUMP (279) 23 24
JUMP_AND_LINK (280) 25
JUMP_AND_LINK_REG (281) 26
LPAREN (282) 33 34 38 39
RPAREN (283) 33 34 38 39
PLUS (284)
MINUS (285)
ADD (286) 40
SUB (287) 41
MUL (288) 42
DIV (289) 43
TEMP (290) 46
BEQ (291) 27
BNE (292) 28
BLT (293) 30
BLE (294) 32
BGT (295) 29
BGE (296) 31
REGISTER (297) 24 26 47
AND (298)
OR (299)
MOVE (300) 45

Nonterminals, with rules where they appear

program (46)
    on left: 1
expList (47)
    on left: 2 3, on right: 1 2
exp (48)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 3
labelList (49)
    on left: 18 19, on right: 18 20
vfTableExp (50)
    on left: 20, on right: 11
strExp (51)
    on left: 21, on right: 12
labelExp (52)
    on left: 22, on right: 4
jumpExp (53)
    on left: 23 24 25 26, on right: 5
cjumpExp (54)
    on left: 27 28 29 30 31 32, on right: 6
loadExp (55)
    on left: 33 34 35 36 37, on right: 7
storeExp (56)
    on left: 38 39, on right: 8
binopExp (57)
    on left: 40 41 42 43 44, on right: 9
movExp (58)
    on left: 45, on right: 10
var (59)
    on left: 46 47, on right: 27 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42 43 44 45


state 0

    VFTABLE	shift, and go to state 1
    PRINT_INT	shift, and go to state 2
    PRINT_CHAR	shift, and go to state 3
    STRING_VAR	shift, and go to state 4
    ALLOCATE	shift, and go to state 5
    START_OF_CODE	shift, and go to state 6
    EXIT	shift, and go to state 7
    LABEL	shift, and go to state 8
    LOAD	shift, and go to state 9
    STORE	shift, and go to state 10
    LOAD_IMMEDIATE	shift, and go to state 11
    LOAD_ADDRESS	shift, and go to state 12
    LOAD_BYTE	shift, and go to state 13
    STORE_BYTE	shift, and go to state 14
    ADD_IMMEDIATE	shift, and go to state 15
    JUMP	shift, and go to state 16
    JUMP_AND_LINK	shift, and go to state 17
    JUMP_AND_LINK_REG	shift, and go to state 18
    ADD 	shift, and go to state 19
    SUB 	shift, and go to state 20
    MUL 	shift, and go to state 21
    DIV 	shift, and go to state 22
    BEQ 	shift, and go to state 23
    BNE 	shift, and go to state 24
    BLT 	shift, and go to state 25
    BLE 	shift, and go to state 26
    BGT 	shift, and go to state 27
    BGE 	shift, and go to state 28
    MOVE	shift, and go to state 29

    program	go to state 143
    expList	go to state 30
    exp 	go to state 31
    vfTableExp	go to state 32
    strExp	go to state 33
    labelExp	go to state 34
    jumpExp	go to state 35
    cjumpExp	go to state 36
    loadExp	go to state 37
    storeExp	go to state 38
    binopExp	go to state 39
    movExp	go to state 40



state 1

    vfTableExp  ->  VFTABLE . COLON labelList   (rule 20)

    COLON	shift, and go to state 41



state 2

    exp  ->  PRINT_INT .   (rule 14)

    $default	reduce using rule 14 (exp)



state 3

    exp  ->  PRINT_CHAR .   (rule 15)

    $default	reduce using rule 15 (exp)



state 4

    strExp  ->  STRING_VAR . COLON STRING   (rule 21)

    COLON	shift, and go to state 42



state 5

    exp  ->  ALLOCATE .   (rule 16)

    $default	reduce using rule 16 (exp)



state 6

    exp  ->  START_OF_CODE .   (rule 13)

    $default	reduce using rule 13 (exp)



state 7

    exp  ->  EXIT .   (rule 17)

    $default	reduce using rule 17 (exp)



state 8

    labelExp  ->  LABEL . COLON   (rule 22)

    COLON	shift, and go to state 43



state 9

    loadExp  ->  LOAD . var COMMA INT LPAREN var RPAREN   (rule 33)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 46



state 10

    storeExp  ->  STORE . var COMMA INT LPAREN var RPAREN   (rule 38)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 47



state 11

    loadExp  ->  LOAD_IMMEDIATE . var COMMA INT   (rule 37)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 48



state 12

    loadExp  ->  LOAD_ADDRESS . var COMMA STRING_VAR   (rule 35)
    loadExp  ->  LOAD_ADDRESS . var COMMA VFTABLE   (rule 36)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 49



state 13

    loadExp  ->  LOAD_BYTE . var COMMA LPAREN var RPAREN   (rule 34)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 50



state 14

    storeExp  ->  STORE_BYTE . var COMMA LPAREN var RPAREN   (rule 39)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 51



state 15

    binopExp  ->  ADD_IMMEDIATE . var COMMA var COMMA INT   (rule 44)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 52



state 16

    jumpExp  ->  JUMP . LABEL   (rule 23)
    jumpExp  ->  JUMP . REGISTER   (rule 24)

    LABEL	shift, and go to state 53
    REGISTER	shift, and go to state 54



state 17

    jumpExp  ->  JUMP_AND_LINK . LABEL   (rule 25)

    LABEL	shift, and go to state 55



state 18

    jumpExp  ->  JUMP_AND_LINK_REG . REGISTER   (rule 26)

    REGISTER	shift, and go to state 56



state 19

    binopExp  ->  ADD . var COMMA var COMMA var   (rule 40)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 57



state 20

    binopExp  ->  SUB . var COMMA var COMMA var   (rule 41)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 58



state 21

    binopExp  ->  MUL . var COMMA var COMMA var   (rule 42)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 59



state 22

    binopExp  ->  DIV . var COMMA var COMMA var   (rule 43)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 60



state 23

    cjumpExp  ->  BEQ . var COMMA var COMMA LABEL   (rule 27)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 61



state 24

    cjumpExp  ->  BNE . var COMMA var COMMA LABEL   (rule 28)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 62



state 25

    cjumpExp  ->  BLT . var COMMA var COMMA LABEL   (rule 30)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 63



state 26

    cjumpExp  ->  BLE . var COMMA var COMMA LABEL   (rule 32)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 64



state 27

    cjumpExp  ->  BGT . var COMMA var COMMA LABEL   (rule 29)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 65



state 28

    cjumpExp  ->  BGE . var COMMA var COMMA LABEL   (rule 31)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 66



state 29

    movExp  ->  MOVE . var COMMA var   (rule 45)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 67



state 30

    program  ->  expList .   (rule 1)

    $default	reduce using rule 1 (program)



state 31

    expList  ->  exp . expList   (rule 2)
    expList  ->  exp .   (rule 3)

    VFTABLE	shift, and go to state 1
    PRINT_INT	shift, and go to state 2
    PRINT_CHAR	shift, and go to state 3
    STRING_VAR	shift, and go to state 4
    ALLOCATE	shift, and go to state 5
    START_OF_CODE	shift, and go to state 6
    EXIT	shift, and go to state 7
    LABEL	shift, and go to state 8
    LOAD	shift, and go to state 9
    STORE	shift, and go to state 10
    LOAD_IMMEDIATE	shift, and go to state 11
    LOAD_ADDRESS	shift, and go to state 12
    LOAD_BYTE	shift, and go to state 13
    STORE_BYTE	shift, and go to state 14
    ADD_IMMEDIATE	shift, and go to state 15
    JUMP	shift, and go to state 16
    JUMP_AND_LINK	shift, and go to state 17
    JUMP_AND_LINK_REG	shift, and go to state 18
    ADD 	shift, and go to state 19
    SUB 	shift, and go to state 20
    MUL 	shift, and go to state 21
    DIV 	shift, and go to state 22
    BEQ 	shift, and go to state 23
    BNE 	shift, and go to state 24
    BLT 	shift, and go to state 25
    BLE 	shift, and go to state 26
    BGT 	shift, and go to state 27
    BGE 	shift, and go to state 28
    MOVE	shift, and go to state 29

    $default	reduce using rule 3 (expList)

    expList	go to state 68
    exp 	go to state 31
    vfTableExp	go to state 32
    strExp	go to state 33
    labelExp	go to state 34
    jumpExp	go to state 35
    cjumpExp	go to state 36
    loadExp	go to state 37
    storeExp	go to state 38
    binopExp	go to state 39
    movExp	go to state 40



state 32

    exp  ->  vfTableExp .   (rule 11)

    $default	reduce using rule 11 (exp)



state 33

    exp  ->  strExp .   (rule 12)

    $default	reduce using rule 12 (exp)



state 34

    exp  ->  labelExp .   (rule 4)

    $default	reduce using rule 4 (exp)



state 35

    exp  ->  jumpExp .   (rule 5)

    $default	reduce using rule 5 (exp)



state 36

    exp  ->  cjumpExp .   (rule 6)

    $default	reduce using rule 6 (exp)



state 37

    exp  ->  loadExp .   (rule 7)

    $default	reduce using rule 7 (exp)



state 38

    exp  ->  storeExp .   (rule 8)

    $default	reduce using rule 8 (exp)



state 39

    exp  ->  binopExp .   (rule 9)

    $default	reduce using rule 9 (exp)



state 40

    exp  ->  movExp .   (rule 10)

    $default	reduce using rule 10 (exp)



state 41

    vfTableExp  ->  VFTABLE COLON . labelList   (rule 20)

    LABEL	shift, and go to state 69

    labelList	go to state 70



state 42

    strExp  ->  STRING_VAR COLON . STRING   (rule 21)

    STRING	shift, and go to state 71



state 43

    labelExp  ->  LABEL COLON .   (rule 22)

    $default	reduce using rule 22 (labelExp)



state 44

    var  ->  TEMP .   (rule 46)

    $default	reduce using rule 46 (var)



state 45

    var  ->  REGISTER .   (rule 47)

    $default	reduce using rule 47 (var)



state 46

    loadExp  ->  LOAD var . COMMA INT LPAREN var RPAREN   (rule 33)

    COMMA	shift, and go to state 72



state 47

    storeExp  ->  STORE var . COMMA INT LPAREN var RPAREN   (rule 38)

    COMMA	shift, and go to state 73



state 48

    loadExp  ->  LOAD_IMMEDIATE var . COMMA INT   (rule 37)

    COMMA	shift, and go to state 74



state 49

    loadExp  ->  LOAD_ADDRESS var . COMMA STRING_VAR   (rule 35)
    loadExp  ->  LOAD_ADDRESS var . COMMA VFTABLE   (rule 36)

    COMMA	shift, and go to state 75



state 50

    loadExp  ->  LOAD_BYTE var . COMMA LPAREN var RPAREN   (rule 34)

    COMMA	shift, and go to state 76



state 51

    storeExp  ->  STORE_BYTE var . COMMA LPAREN var RPAREN   (rule 39)

    COMMA	shift, and go to state 77



state 52

    binopExp  ->  ADD_IMMEDIATE var . COMMA var COMMA INT   (rule 44)

    COMMA	shift, and go to state 78



state 53

    jumpExp  ->  JUMP LABEL .   (rule 23)

    $default	reduce using rule 23 (jumpExp)



state 54

    jumpExp  ->  JUMP REGISTER .   (rule 24)

    $default	reduce using rule 24 (jumpExp)



state 55

    jumpExp  ->  JUMP_AND_LINK LABEL .   (rule 25)

    $default	reduce using rule 25 (jumpExp)



state 56

    jumpExp  ->  JUMP_AND_LINK_REG REGISTER .   (rule 26)

    $default	reduce using rule 26 (jumpExp)



state 57

    binopExp  ->  ADD var . COMMA var COMMA var   (rule 40)

    COMMA	shift, and go to state 79



state 58

    binopExp  ->  SUB var . COMMA var COMMA var   (rule 41)

    COMMA	shift, and go to state 80



state 59

    binopExp  ->  MUL var . COMMA var COMMA var   (rule 42)

    COMMA	shift, and go to state 81



state 60

    binopExp  ->  DIV var . COMMA var COMMA var   (rule 43)

    COMMA	shift, and go to state 82



state 61

    cjumpExp  ->  BEQ var . COMMA var COMMA LABEL   (rule 27)

    COMMA	shift, and go to state 83



state 62

    cjumpExp  ->  BNE var . COMMA var COMMA LABEL   (rule 28)

    COMMA	shift, and go to state 84



state 63

    cjumpExp  ->  BLT var . COMMA var COMMA LABEL   (rule 30)

    COMMA	shift, and go to state 85



state 64

    cjumpExp  ->  BLE var . COMMA var COMMA LABEL   (rule 32)

    COMMA	shift, and go to state 86



state 65

    cjumpExp  ->  BGT var . COMMA var COMMA LABEL   (rule 29)

    COMMA	shift, and go to state 87



state 66

    cjumpExp  ->  BGE var . COMMA var COMMA LABEL   (rule 31)

    COMMA	shift, and go to state 88



state 67

    movExp  ->  MOVE var . COMMA var   (rule 45)

    COMMA	shift, and go to state 89



state 68

    expList  ->  exp expList .   (rule 2)

    $default	reduce using rule 2 (expList)



state 69

    labelList  ->  LABEL . COMMA labelList   (rule 18)
    labelList  ->  LABEL .   (rule 19)

    COMMA	shift, and go to state 90

    $default	reduce using rule 19 (labelList)



state 70

    vfTableExp  ->  VFTABLE COLON labelList .   (rule 20)

    $default	reduce using rule 20 (vfTableExp)



state 71

    strExp  ->  STRING_VAR COLON STRING .   (rule 21)

    $default	reduce using rule 21 (strExp)



state 72

    loadExp  ->  LOAD var COMMA . INT LPAREN var RPAREN   (rule 33)

    INT 	shift, and go to state 91



state 73

    storeExp  ->  STORE var COMMA . INT LPAREN var RPAREN   (rule 38)

    INT 	shift, and go to state 92



state 74

    loadExp  ->  LOAD_IMMEDIATE var COMMA . INT   (rule 37)

    INT 	shift, and go to state 93



state 75

    loadExp  ->  LOAD_ADDRESS var COMMA . STRING_VAR   (rule 35)
    loadExp  ->  LOAD_ADDRESS var COMMA . VFTABLE   (rule 36)

    VFTABLE	shift, and go to state 94
    STRING_VAR	shift, and go to state 95



state 76

    loadExp  ->  LOAD_BYTE var COMMA . LPAREN var RPAREN   (rule 34)

    LPAREN	shift, and go to state 96



state 77

    storeExp  ->  STORE_BYTE var COMMA . LPAREN var RPAREN   (rule 39)

    LPAREN	shift, and go to state 97



state 78

    binopExp  ->  ADD_IMMEDIATE var COMMA . var COMMA INT   (rule 44)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 98



state 79

    binopExp  ->  ADD var COMMA . var COMMA var   (rule 40)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 99



state 80

    binopExp  ->  SUB var COMMA . var COMMA var   (rule 41)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 100



state 81

    binopExp  ->  MUL var COMMA . var COMMA var   (rule 42)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 101



state 82

    binopExp  ->  DIV var COMMA . var COMMA var   (rule 43)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 102



state 83

    cjumpExp  ->  BEQ var COMMA . var COMMA LABEL   (rule 27)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 103



state 84

    cjumpExp  ->  BNE var COMMA . var COMMA LABEL   (rule 28)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 104



state 85

    cjumpExp  ->  BLT var COMMA . var COMMA LABEL   (rule 30)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 105



state 86

    cjumpExp  ->  BLE var COMMA . var COMMA LABEL   (rule 32)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 106



state 87

    cjumpExp  ->  BGT var COMMA . var COMMA LABEL   (rule 29)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 107



state 88

    cjumpExp  ->  BGE var COMMA . var COMMA LABEL   (rule 31)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 108



state 89

    movExp  ->  MOVE var COMMA . var   (rule 45)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 109



state 90

    labelList  ->  LABEL COMMA . labelList   (rule 18)

    LABEL	shift, and go to state 69

    labelList	go to state 110



state 91

    loadExp  ->  LOAD var COMMA INT . LPAREN var RPAREN   (rule 33)

    LPAREN	shift, and go to state 111



state 92

    storeExp  ->  STORE var COMMA INT . LPAREN var RPAREN   (rule 38)

    LPAREN	shift, and go to state 112



state 93

    loadExp  ->  LOAD_IMMEDIATE var COMMA INT .   (rule 37)

    $default	reduce using rule 37 (loadExp)



state 94

    loadExp  ->  LOAD_ADDRESS var COMMA VFTABLE .   (rule 36)

    $default	reduce using rule 36 (loadExp)



state 95

    loadExp  ->  LOAD_ADDRESS var COMMA STRING_VAR .   (rule 35)

    $default	reduce using rule 35 (loadExp)



state 96

    loadExp  ->  LOAD_BYTE var COMMA LPAREN . var RPAREN   (rule 34)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 113



state 97

    storeExp  ->  STORE_BYTE var COMMA LPAREN . var RPAREN   (rule 39)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 114



state 98

    binopExp  ->  ADD_IMMEDIATE var COMMA var . COMMA INT   (rule 44)

    COMMA	shift, and go to state 115



state 99

    binopExp  ->  ADD var COMMA var . COMMA var   (rule 40)

    COMMA	shift, and go to state 116



state 100

    binopExp  ->  SUB var COMMA var . COMMA var   (rule 41)

    COMMA	shift, and go to state 117



state 101

    binopExp  ->  MUL var COMMA var . COMMA var   (rule 42)

    COMMA	shift, and go to state 118



state 102

    binopExp  ->  DIV var COMMA var . COMMA var   (rule 43)

    COMMA	shift, and go to state 119



state 103

    cjumpExp  ->  BEQ var COMMA var . COMMA LABEL   (rule 27)

    COMMA	shift, and go to state 120



state 104

    cjumpExp  ->  BNE var COMMA var . COMMA LABEL   (rule 28)

    COMMA	shift, and go to state 121



state 105

    cjumpExp  ->  BLT var COMMA var . COMMA LABEL   (rule 30)

    COMMA	shift, and go to state 122



state 106

    cjumpExp  ->  BLE var COMMA var . COMMA LABEL   (rule 32)

    COMMA	shift, and go to state 123



state 107

    cjumpExp  ->  BGT var COMMA var . COMMA LABEL   (rule 29)

    COMMA	shift, and go to state 124



state 108

    cjumpExp  ->  BGE var COMMA var . COMMA LABEL   (rule 31)

    COMMA	shift, and go to state 125



state 109

    movExp  ->  MOVE var COMMA var .   (rule 45)

    $default	reduce using rule 45 (movExp)



state 110

    labelList  ->  LABEL COMMA labelList .   (rule 18)

    $default	reduce using rule 18 (labelList)



state 111

    loadExp  ->  LOAD var COMMA INT LPAREN . var RPAREN   (rule 33)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 126



state 112

    storeExp  ->  STORE var COMMA INT LPAREN . var RPAREN   (rule 38)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 127



state 113

    loadExp  ->  LOAD_BYTE var COMMA LPAREN var . RPAREN   (rule 34)

    RPAREN	shift, and go to state 128



state 114

    storeExp  ->  STORE_BYTE var COMMA LPAREN var . RPAREN   (rule 39)

    RPAREN	shift, and go to state 129



state 115

    binopExp  ->  ADD_IMMEDIATE var COMMA var COMMA . INT   (rule 44)

    INT 	shift, and go to state 130



state 116

    binopExp  ->  ADD var COMMA var COMMA . var   (rule 40)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 131



state 117

    binopExp  ->  SUB var COMMA var COMMA . var   (rule 41)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 132



state 118

    binopExp  ->  MUL var COMMA var COMMA . var   (rule 42)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 133



state 119

    binopExp  ->  DIV var COMMA var COMMA . var   (rule 43)

    TEMP	shift, and go to state 44
    REGISTER	shift, and go to state 45

    var 	go to state 134



state 120

    cjumpExp  ->  BEQ var COMMA var COMMA . LABEL   (rule 27)

    LABEL	shift, and go to state 135



state 121

    cjumpExp  ->  BNE var COMMA var COMMA . LABEL   (rule 28)

    LABEL	shift, and go to state 136



state 122

    cjumpExp  ->  BLT var COMMA var COMMA . LABEL   (rule 30)

    LABEL	shift, and go to state 137



state 123

    cjumpExp  ->  BLE var COMMA var COMMA . LABEL   (rule 32)

    LABEL	shift, and go to state 138



state 124

    cjumpExp  ->  BGT var COMMA var COMMA . LABEL   (rule 29)

    LABEL	shift, and go to state 139



state 125

    cjumpExp  ->  BGE var COMMA var COMMA . LABEL   (rule 31)

    LABEL	shift, and go to state 140



state 126

    loadExp  ->  LOAD var COMMA INT LPAREN var . RPAREN   (rule 33)

    RPAREN	shift, and go to state 141



state 127

    storeExp  ->  STORE var COMMA INT LPAREN var . RPAREN   (rule 38)

    RPAREN	shift, and go to state 142



state 128

    loadExp  ->  LOAD_BYTE var COMMA LPAREN var RPAREN .   (rule 34)

    $default	reduce using rule 34 (loadExp)



state 129

    storeExp  ->  STORE_BYTE var COMMA LPAREN var RPAREN .   (rule 39)

    $default	reduce using rule 39 (storeExp)



state 130

    binopExp  ->  ADD_IMMEDIATE var COMMA var COMMA INT .   (rule 44)

    $default	reduce using rule 44 (binopExp)



state 131

    binopExp  ->  ADD var COMMA var COMMA var .   (rule 40)

    $default	reduce using rule 40 (binopExp)



state 132

    binopExp  ->  SUB var COMMA var COMMA var .   (rule 41)

    $default	reduce using rule 41 (binopExp)



state 133

    binopExp  ->  MUL var COMMA var COMMA var .   (rule 42)

    $default	reduce using rule 42 (binopExp)



state 134

    binopExp  ->  DIV var COMMA var COMMA var .   (rule 43)

    $default	reduce using rule 43 (binopExp)



state 135

    cjumpExp  ->  BEQ var COMMA var COMMA LABEL .   (rule 27)

    $default	reduce using rule 27 (cjumpExp)



state 136

    cjumpExp  ->  BNE var COMMA var COMMA LABEL .   (rule 28)

    $default	reduce using rule 28 (cjumpExp)



state 137

    cjumpExp  ->  BLT var COMMA var COMMA LABEL .   (rule 30)

    $default	reduce using rule 30 (cjumpExp)



state 138

    cjumpExp  ->  BLE var COMMA var COMMA LABEL .   (rule 32)

    $default	reduce using rule 32 (cjumpExp)



state 139

    cjumpExp  ->  BGT var COMMA var COMMA LABEL .   (rule 29)

    $default	reduce using rule 29 (cjumpExp)



state 140

    cjumpExp  ->  BGE var COMMA var COMMA LABEL .   (rule 31)

    $default	reduce using rule 31 (cjumpExp)



state 141

    loadExp  ->  LOAD var COMMA INT LPAREN var RPAREN .   (rule 33)

    $default	reduce using rule 33 (loadExp)



state 142

    storeExp  ->  STORE var COMMA INT LPAREN var RPAREN .   (rule 38)

    $default	reduce using rule 38 (storeExp)



state 143

    $   	go to state 144



state 144

    $   	go to state 145



state 145

    $default	accept
