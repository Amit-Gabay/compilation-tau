

Terminals which are not used:

   FLOAT
   ID
   PLUS
   MINUS
   AND
   OR



Grammar
rule 1    program -> expList
rule 2    expList -> exp expList
rule 3    expList -> exp
rule 4    exp -> labelExp
rule 5    exp -> jumpExp
rule 6    exp -> cjumpExp
rule 7    exp -> loadExp
rule 8    exp -> storeExp
rule 9    exp -> binopExp
rule 10   exp -> movExp
rule 11   exp -> vfTableExp
rule 12   exp -> strExp
rule 13   exp -> PRINT_INT
rule 14   exp -> PRINT_CHAR
rule 15   exp -> ALLOCATE
rule 16   exp -> EXIT
rule 17   labelList -> LABEL COMMA labelList
rule 18   labelList -> LABEL
rule 19   vfTableExp -> VFTABLE COLON labelList
rule 20   strExp -> STRING_VAR COLON STRING
rule 21   labelExp -> LABEL COLON
rule 22   jumpExp -> JUMP LABEL
rule 23   jumpExp -> JUMP REGISTER
rule 24   jumpExp -> JUMP_AND_LINK LABEL
rule 25   jumpExp -> JUMP_AND_LINK_REG REGISTER
rule 26   cjumpExp -> BEQ var COMMA var COMMA LABEL
rule 27   cjumpExp -> BNE var COMMA var COMMA LABEL
rule 28   cjumpExp -> BGT var COMMA var COMMA LABEL
rule 29   cjumpExp -> BLT var COMMA var COMMA LABEL
rule 30   cjumpExp -> BGE var COMMA var COMMA LABEL
rule 31   cjumpExp -> BLE var COMMA var COMMA LABEL
rule 32   loadExp -> LOAD var COMMA INT LPAREN var RPAREN
rule 33   loadExp -> LOAD_BYTE var COMMA LPAREN var RPAREN
rule 34   loadExp -> LOAD_ADDRESS var COMMA STRING_VAR
rule 35   loadExp -> LOAD_ADDRESS var COMMA VFTABLE
rule 36   loadExp -> LOAD_IMMEDIATE var COMMA INT
rule 37   storeExp -> STORE var COMMA INT LPAREN var RPAREN
rule 38   binopExp -> ADD var COMMA var COMMA var
rule 39   binopExp -> SUB var COMMA var COMMA var
rule 40   binopExp -> MUL var COMMA var COMMA var
rule 41   binopExp -> DIV var COMMA var COMMA var
rule 42   binopExp -> ADD_IMMEDIATE var COMMA var COMMA INT
rule 43   movExp -> MOVE var COMMA var
rule 44   var -> TEMP
rule 45   var -> REGISTER

Terminals, with rules where they appear

$ (-1)
error (256)
INT (258) 32 36 37 42
FLOAT (259)
STRING (260) 20
VFTABLE (261) 19 35
PRINT_INT (262) 13
PRINT_CHAR (263) 14
STRING_VAR (264) 20 34
ALLOCATE (265) 15
EXIT (266) 16
ID (267)
LABEL (268) 17 18 21 22 24 26 27 28 29 30 31
COMMA (269) 17 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
COLON (270) 19 20 21
LOAD (271) 32
STORE (272) 37
LOAD_IMMEDIATE (273) 36
LOAD_ADDRESS (274) 34 35
LOAD_BYTE (275) 33
ADD_IMMEDIATE (276) 42
JUMP (277) 22 23
JUMP_AND_LINK (278) 24
JUMP_AND_LINK_REG (279) 25
LPAREN (280) 32 33 37
RPAREN (281) 32 33 37
PLUS (282)
MINUS (283)
ADD (284) 38
SUB (285) 39
MUL (286) 40
DIV (287) 41
TEMP (288) 44
BEQ (289) 26
BNE (290) 27
BLT (291) 29
BLE (292) 31
BGT (293) 28
BGE (294) 30
REGISTER (295) 23 25 45
AND (296)
OR (297)
MOVE (298) 43

Nonterminals, with rules where they appear

program (44)
    on left: 1
expList (45)
    on left: 2 3, on right: 1 2
exp (46)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 3
labelList (47)
    on left: 17 18, on right: 17 19
vfTableExp (48)
    on left: 19, on right: 11
strExp (49)
    on left: 20, on right: 12
labelExp (50)
    on left: 21, on right: 4
jumpExp (51)
    on left: 22 23 24 25, on right: 5
cjumpExp (52)
    on left: 26 27 28 29 30 31, on right: 6
loadExp (53)
    on left: 32 33 34 35 36, on right: 7
storeExp (54)
    on left: 37, on right: 8
binopExp (55)
    on left: 38 39 40 41 42, on right: 9
movExp (56)
    on left: 43, on right: 10
var (57)
    on left: 44 45, on right: 26 27 28 29 30 31 32 33 34 35 36 37 38
    39 40 41 42 43


state 0

    VFTABLE	shift, and go to state 1
    PRINT_INT	shift, and go to state 2
    PRINT_CHAR	shift, and go to state 3
    STRING_VAR	shift, and go to state 4
    ALLOCATE	shift, and go to state 5
    EXIT	shift, and go to state 6
    LABEL	shift, and go to state 7
    LOAD	shift, and go to state 8
    STORE	shift, and go to state 9
    LOAD_IMMEDIATE	shift, and go to state 10
    LOAD_ADDRESS	shift, and go to state 11
    LOAD_BYTE	shift, and go to state 12
    ADD_IMMEDIATE	shift, and go to state 13
    JUMP	shift, and go to state 14
    JUMP_AND_LINK	shift, and go to state 15
    JUMP_AND_LINK_REG	shift, and go to state 16
    ADD 	shift, and go to state 17
    SUB 	shift, and go to state 18
    MUL 	shift, and go to state 19
    DIV 	shift, and go to state 20
    BEQ 	shift, and go to state 21
    BNE 	shift, and go to state 22
    BLT 	shift, and go to state 23
    BLE 	shift, and go to state 24
    BGT 	shift, and go to state 25
    BGE 	shift, and go to state 26
    MOVE	shift, and go to state 27

    program	go to state 136
    expList	go to state 28
    exp 	go to state 29
    vfTableExp	go to state 30
    strExp	go to state 31
    labelExp	go to state 32
    jumpExp	go to state 33
    cjumpExp	go to state 34
    loadExp	go to state 35
    storeExp	go to state 36
    binopExp	go to state 37
    movExp	go to state 38



state 1

    vfTableExp  ->  VFTABLE . COLON labelList   (rule 19)

    COLON	shift, and go to state 39



state 2

    exp  ->  PRINT_INT .   (rule 13)

    $default	reduce using rule 13 (exp)



state 3

    exp  ->  PRINT_CHAR .   (rule 14)

    $default	reduce using rule 14 (exp)



state 4

    strExp  ->  STRING_VAR . COLON STRING   (rule 20)

    COLON	shift, and go to state 40



state 5

    exp  ->  ALLOCATE .   (rule 15)

    $default	reduce using rule 15 (exp)



state 6

    exp  ->  EXIT .   (rule 16)

    $default	reduce using rule 16 (exp)



state 7

    labelExp  ->  LABEL . COLON   (rule 21)

    COLON	shift, and go to state 41



state 8

    loadExp  ->  LOAD . var COMMA INT LPAREN var RPAREN   (rule 32)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 44



state 9

    storeExp  ->  STORE . var COMMA INT LPAREN var RPAREN   (rule 37)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 45



state 10

    loadExp  ->  LOAD_IMMEDIATE . var COMMA INT   (rule 36)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 46



state 11

    loadExp  ->  LOAD_ADDRESS . var COMMA STRING_VAR   (rule 34)
    loadExp  ->  LOAD_ADDRESS . var COMMA VFTABLE   (rule 35)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 47



state 12

    loadExp  ->  LOAD_BYTE . var COMMA LPAREN var RPAREN   (rule 33)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 48



state 13

    binopExp  ->  ADD_IMMEDIATE . var COMMA var COMMA INT   (rule 42)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 49



state 14

    jumpExp  ->  JUMP . LABEL   (rule 22)
    jumpExp  ->  JUMP . REGISTER   (rule 23)

    LABEL	shift, and go to state 50
    REGISTER	shift, and go to state 51



state 15

    jumpExp  ->  JUMP_AND_LINK . LABEL   (rule 24)

    LABEL	shift, and go to state 52



state 16

    jumpExp  ->  JUMP_AND_LINK_REG . REGISTER   (rule 25)

    REGISTER	shift, and go to state 53



state 17

    binopExp  ->  ADD . var COMMA var COMMA var   (rule 38)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 54



state 18

    binopExp  ->  SUB . var COMMA var COMMA var   (rule 39)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 55



state 19

    binopExp  ->  MUL . var COMMA var COMMA var   (rule 40)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 56



state 20

    binopExp  ->  DIV . var COMMA var COMMA var   (rule 41)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 57



state 21

    cjumpExp  ->  BEQ . var COMMA var COMMA LABEL   (rule 26)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 58



state 22

    cjumpExp  ->  BNE . var COMMA var COMMA LABEL   (rule 27)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 59



state 23

    cjumpExp  ->  BLT . var COMMA var COMMA LABEL   (rule 29)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 60



state 24

    cjumpExp  ->  BLE . var COMMA var COMMA LABEL   (rule 31)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 61



state 25

    cjumpExp  ->  BGT . var COMMA var COMMA LABEL   (rule 28)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 62



state 26

    cjumpExp  ->  BGE . var COMMA var COMMA LABEL   (rule 30)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 63



state 27

    movExp  ->  MOVE . var COMMA var   (rule 43)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 64



state 28

    program  ->  expList .   (rule 1)

    $default	reduce using rule 1 (program)



state 29

    expList  ->  exp . expList   (rule 2)
    expList  ->  exp .   (rule 3)

    VFTABLE	shift, and go to state 1
    PRINT_INT	shift, and go to state 2
    PRINT_CHAR	shift, and go to state 3
    STRING_VAR	shift, and go to state 4
    ALLOCATE	shift, and go to state 5
    EXIT	shift, and go to state 6
    LABEL	shift, and go to state 7
    LOAD	shift, and go to state 8
    STORE	shift, and go to state 9
    LOAD_IMMEDIATE	shift, and go to state 10
    LOAD_ADDRESS	shift, and go to state 11
    LOAD_BYTE	shift, and go to state 12
    ADD_IMMEDIATE	shift, and go to state 13
    JUMP	shift, and go to state 14
    JUMP_AND_LINK	shift, and go to state 15
    JUMP_AND_LINK_REG	shift, and go to state 16
    ADD 	shift, and go to state 17
    SUB 	shift, and go to state 18
    MUL 	shift, and go to state 19
    DIV 	shift, and go to state 20
    BEQ 	shift, and go to state 21
    BNE 	shift, and go to state 22
    BLT 	shift, and go to state 23
    BLE 	shift, and go to state 24
    BGT 	shift, and go to state 25
    BGE 	shift, and go to state 26
    MOVE	shift, and go to state 27

    $default	reduce using rule 3 (expList)

    expList	go to state 65
    exp 	go to state 29
    vfTableExp	go to state 30
    strExp	go to state 31
    labelExp	go to state 32
    jumpExp	go to state 33
    cjumpExp	go to state 34
    loadExp	go to state 35
    storeExp	go to state 36
    binopExp	go to state 37
    movExp	go to state 38



state 30

    exp  ->  vfTableExp .   (rule 11)

    $default	reduce using rule 11 (exp)



state 31

    exp  ->  strExp .   (rule 12)

    $default	reduce using rule 12 (exp)



state 32

    exp  ->  labelExp .   (rule 4)

    $default	reduce using rule 4 (exp)



state 33

    exp  ->  jumpExp .   (rule 5)

    $default	reduce using rule 5 (exp)



state 34

    exp  ->  cjumpExp .   (rule 6)

    $default	reduce using rule 6 (exp)



state 35

    exp  ->  loadExp .   (rule 7)

    $default	reduce using rule 7 (exp)



state 36

    exp  ->  storeExp .   (rule 8)

    $default	reduce using rule 8 (exp)



state 37

    exp  ->  binopExp .   (rule 9)

    $default	reduce using rule 9 (exp)



state 38

    exp  ->  movExp .   (rule 10)

    $default	reduce using rule 10 (exp)



state 39

    vfTableExp  ->  VFTABLE COLON . labelList   (rule 19)

    LABEL	shift, and go to state 66

    labelList	go to state 67



state 40

    strExp  ->  STRING_VAR COLON . STRING   (rule 20)

    STRING	shift, and go to state 68



state 41

    labelExp  ->  LABEL COLON .   (rule 21)

    $default	reduce using rule 21 (labelExp)



state 42

    var  ->  TEMP .   (rule 44)

    $default	reduce using rule 44 (var)



state 43

    var  ->  REGISTER .   (rule 45)

    $default	reduce using rule 45 (var)



state 44

    loadExp  ->  LOAD var . COMMA INT LPAREN var RPAREN   (rule 32)

    COMMA	shift, and go to state 69



state 45

    storeExp  ->  STORE var . COMMA INT LPAREN var RPAREN   (rule 37)

    COMMA	shift, and go to state 70



state 46

    loadExp  ->  LOAD_IMMEDIATE var . COMMA INT   (rule 36)

    COMMA	shift, and go to state 71



state 47

    loadExp  ->  LOAD_ADDRESS var . COMMA STRING_VAR   (rule 34)
    loadExp  ->  LOAD_ADDRESS var . COMMA VFTABLE   (rule 35)

    COMMA	shift, and go to state 72



state 48

    loadExp  ->  LOAD_BYTE var . COMMA LPAREN var RPAREN   (rule 33)

    COMMA	shift, and go to state 73



state 49

    binopExp  ->  ADD_IMMEDIATE var . COMMA var COMMA INT   (rule 42)

    COMMA	shift, and go to state 74



state 50

    jumpExp  ->  JUMP LABEL .   (rule 22)

    $default	reduce using rule 22 (jumpExp)



state 51

    jumpExp  ->  JUMP REGISTER .   (rule 23)

    $default	reduce using rule 23 (jumpExp)



state 52

    jumpExp  ->  JUMP_AND_LINK LABEL .   (rule 24)

    $default	reduce using rule 24 (jumpExp)



state 53

    jumpExp  ->  JUMP_AND_LINK_REG REGISTER .   (rule 25)

    $default	reduce using rule 25 (jumpExp)



state 54

    binopExp  ->  ADD var . COMMA var COMMA var   (rule 38)

    COMMA	shift, and go to state 75



state 55

    binopExp  ->  SUB var . COMMA var COMMA var   (rule 39)

    COMMA	shift, and go to state 76



state 56

    binopExp  ->  MUL var . COMMA var COMMA var   (rule 40)

    COMMA	shift, and go to state 77



state 57

    binopExp  ->  DIV var . COMMA var COMMA var   (rule 41)

    COMMA	shift, and go to state 78



state 58

    cjumpExp  ->  BEQ var . COMMA var COMMA LABEL   (rule 26)

    COMMA	shift, and go to state 79



state 59

    cjumpExp  ->  BNE var . COMMA var COMMA LABEL   (rule 27)

    COMMA	shift, and go to state 80



state 60

    cjumpExp  ->  BLT var . COMMA var COMMA LABEL   (rule 29)

    COMMA	shift, and go to state 81



state 61

    cjumpExp  ->  BLE var . COMMA var COMMA LABEL   (rule 31)

    COMMA	shift, and go to state 82



state 62

    cjumpExp  ->  BGT var . COMMA var COMMA LABEL   (rule 28)

    COMMA	shift, and go to state 83



state 63

    cjumpExp  ->  BGE var . COMMA var COMMA LABEL   (rule 30)

    COMMA	shift, and go to state 84



state 64

    movExp  ->  MOVE var . COMMA var   (rule 43)

    COMMA	shift, and go to state 85



state 65

    expList  ->  exp expList .   (rule 2)

    $default	reduce using rule 2 (expList)



state 66

    labelList  ->  LABEL . COMMA labelList   (rule 17)
    labelList  ->  LABEL .   (rule 18)

    COMMA	shift, and go to state 86

    $default	reduce using rule 18 (labelList)



state 67

    vfTableExp  ->  VFTABLE COLON labelList .   (rule 19)

    $default	reduce using rule 19 (vfTableExp)



state 68

    strExp  ->  STRING_VAR COLON STRING .   (rule 20)

    $default	reduce using rule 20 (strExp)



state 69

    loadExp  ->  LOAD var COMMA . INT LPAREN var RPAREN   (rule 32)

    INT 	shift, and go to state 87



state 70

    storeExp  ->  STORE var COMMA . INT LPAREN var RPAREN   (rule 37)

    INT 	shift, and go to state 88



state 71

    loadExp  ->  LOAD_IMMEDIATE var COMMA . INT   (rule 36)

    INT 	shift, and go to state 89



state 72

    loadExp  ->  LOAD_ADDRESS var COMMA . STRING_VAR   (rule 34)
    loadExp  ->  LOAD_ADDRESS var COMMA . VFTABLE   (rule 35)

    VFTABLE	shift, and go to state 90
    STRING_VAR	shift, and go to state 91



state 73

    loadExp  ->  LOAD_BYTE var COMMA . LPAREN var RPAREN   (rule 33)

    LPAREN	shift, and go to state 92



state 74

    binopExp  ->  ADD_IMMEDIATE var COMMA . var COMMA INT   (rule 42)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 93



state 75

    binopExp  ->  ADD var COMMA . var COMMA var   (rule 38)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 94



state 76

    binopExp  ->  SUB var COMMA . var COMMA var   (rule 39)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 95



state 77

    binopExp  ->  MUL var COMMA . var COMMA var   (rule 40)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 96



state 78

    binopExp  ->  DIV var COMMA . var COMMA var   (rule 41)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 97



state 79

    cjumpExp  ->  BEQ var COMMA . var COMMA LABEL   (rule 26)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 98



state 80

    cjumpExp  ->  BNE var COMMA . var COMMA LABEL   (rule 27)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 99



state 81

    cjumpExp  ->  BLT var COMMA . var COMMA LABEL   (rule 29)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 100



state 82

    cjumpExp  ->  BLE var COMMA . var COMMA LABEL   (rule 31)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 101



state 83

    cjumpExp  ->  BGT var COMMA . var COMMA LABEL   (rule 28)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 102



state 84

    cjumpExp  ->  BGE var COMMA . var COMMA LABEL   (rule 30)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 103



state 85

    movExp  ->  MOVE var COMMA . var   (rule 43)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 104



state 86

    labelList  ->  LABEL COMMA . labelList   (rule 17)

    LABEL	shift, and go to state 66

    labelList	go to state 105



state 87

    loadExp  ->  LOAD var COMMA INT . LPAREN var RPAREN   (rule 32)

    LPAREN	shift, and go to state 106



state 88

    storeExp  ->  STORE var COMMA INT . LPAREN var RPAREN   (rule 37)

    LPAREN	shift, and go to state 107



state 89

    loadExp  ->  LOAD_IMMEDIATE var COMMA INT .   (rule 36)

    $default	reduce using rule 36 (loadExp)



state 90

    loadExp  ->  LOAD_ADDRESS var COMMA VFTABLE .   (rule 35)

    $default	reduce using rule 35 (loadExp)



state 91

    loadExp  ->  LOAD_ADDRESS var COMMA STRING_VAR .   (rule 34)

    $default	reduce using rule 34 (loadExp)



state 92

    loadExp  ->  LOAD_BYTE var COMMA LPAREN . var RPAREN   (rule 33)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 108



state 93

    binopExp  ->  ADD_IMMEDIATE var COMMA var . COMMA INT   (rule 42)

    COMMA	shift, and go to state 109



state 94

    binopExp  ->  ADD var COMMA var . COMMA var   (rule 38)

    COMMA	shift, and go to state 110



state 95

    binopExp  ->  SUB var COMMA var . COMMA var   (rule 39)

    COMMA	shift, and go to state 111



state 96

    binopExp  ->  MUL var COMMA var . COMMA var   (rule 40)

    COMMA	shift, and go to state 112



state 97

    binopExp  ->  DIV var COMMA var . COMMA var   (rule 41)

    COMMA	shift, and go to state 113



state 98

    cjumpExp  ->  BEQ var COMMA var . COMMA LABEL   (rule 26)

    COMMA	shift, and go to state 114



state 99

    cjumpExp  ->  BNE var COMMA var . COMMA LABEL   (rule 27)

    COMMA	shift, and go to state 115



state 100

    cjumpExp  ->  BLT var COMMA var . COMMA LABEL   (rule 29)

    COMMA	shift, and go to state 116



state 101

    cjumpExp  ->  BLE var COMMA var . COMMA LABEL   (rule 31)

    COMMA	shift, and go to state 117



state 102

    cjumpExp  ->  BGT var COMMA var . COMMA LABEL   (rule 28)

    COMMA	shift, and go to state 118



state 103

    cjumpExp  ->  BGE var COMMA var . COMMA LABEL   (rule 30)

    COMMA	shift, and go to state 119



state 104

    movExp  ->  MOVE var COMMA var .   (rule 43)

    $default	reduce using rule 43 (movExp)



state 105

    labelList  ->  LABEL COMMA labelList .   (rule 17)

    $default	reduce using rule 17 (labelList)



state 106

    loadExp  ->  LOAD var COMMA INT LPAREN . var RPAREN   (rule 32)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 120



state 107

    storeExp  ->  STORE var COMMA INT LPAREN . var RPAREN   (rule 37)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 121



state 108

    loadExp  ->  LOAD_BYTE var COMMA LPAREN var . RPAREN   (rule 33)

    RPAREN	shift, and go to state 122



state 109

    binopExp  ->  ADD_IMMEDIATE var COMMA var COMMA . INT   (rule 42)

    INT 	shift, and go to state 123



state 110

    binopExp  ->  ADD var COMMA var COMMA . var   (rule 38)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 124



state 111

    binopExp  ->  SUB var COMMA var COMMA . var   (rule 39)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 125



state 112

    binopExp  ->  MUL var COMMA var COMMA . var   (rule 40)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 126



state 113

    binopExp  ->  DIV var COMMA var COMMA . var   (rule 41)

    TEMP	shift, and go to state 42
    REGISTER	shift, and go to state 43

    var 	go to state 127



state 114

    cjumpExp  ->  BEQ var COMMA var COMMA . LABEL   (rule 26)

    LABEL	shift, and go to state 128



state 115

    cjumpExp  ->  BNE var COMMA var COMMA . LABEL   (rule 27)

    LABEL	shift, and go to state 129



state 116

    cjumpExp  ->  BLT var COMMA var COMMA . LABEL   (rule 29)

    LABEL	shift, and go to state 130



state 117

    cjumpExp  ->  BLE var COMMA var COMMA . LABEL   (rule 31)

    LABEL	shift, and go to state 131



state 118

    cjumpExp  ->  BGT var COMMA var COMMA . LABEL   (rule 28)

    LABEL	shift, and go to state 132



state 119

    cjumpExp  ->  BGE var COMMA var COMMA . LABEL   (rule 30)

    LABEL	shift, and go to state 133



state 120

    loadExp  ->  LOAD var COMMA INT LPAREN var . RPAREN   (rule 32)

    RPAREN	shift, and go to state 134



state 121

    storeExp  ->  STORE var COMMA INT LPAREN var . RPAREN   (rule 37)

    RPAREN	shift, and go to state 135



state 122

    loadExp  ->  LOAD_BYTE var COMMA LPAREN var RPAREN .   (rule 33)

    $default	reduce using rule 33 (loadExp)



state 123

    binopExp  ->  ADD_IMMEDIATE var COMMA var COMMA INT .   (rule 42)

    $default	reduce using rule 42 (binopExp)



state 124

    binopExp  ->  ADD var COMMA var COMMA var .   (rule 38)

    $default	reduce using rule 38 (binopExp)



state 125

    binopExp  ->  SUB var COMMA var COMMA var .   (rule 39)

    $default	reduce using rule 39 (binopExp)



state 126

    binopExp  ->  MUL var COMMA var COMMA var .   (rule 40)

    $default	reduce using rule 40 (binopExp)



state 127

    binopExp  ->  DIV var COMMA var COMMA var .   (rule 41)

    $default	reduce using rule 41 (binopExp)



state 128

    cjumpExp  ->  BEQ var COMMA var COMMA LABEL .   (rule 26)

    $default	reduce using rule 26 (cjumpExp)



state 129

    cjumpExp  ->  BNE var COMMA var COMMA LABEL .   (rule 27)

    $default	reduce using rule 27 (cjumpExp)



state 130

    cjumpExp  ->  BLT var COMMA var COMMA LABEL .   (rule 29)

    $default	reduce using rule 29 (cjumpExp)



state 131

    cjumpExp  ->  BLE var COMMA var COMMA LABEL .   (rule 31)

    $default	reduce using rule 31 (cjumpExp)



state 132

    cjumpExp  ->  BGT var COMMA var COMMA LABEL .   (rule 28)

    $default	reduce using rule 28 (cjumpExp)



state 133

    cjumpExp  ->  BGE var COMMA var COMMA LABEL .   (rule 30)

    $default	reduce using rule 30 (cjumpExp)



state 134

    loadExp  ->  LOAD var COMMA INT LPAREN var RPAREN .   (rule 32)

    $default	reduce using rule 32 (loadExp)



state 135

    storeExp  ->  STORE var COMMA INT LPAREN var RPAREN .   (rule 37)

    $default	reduce using rule 37 (storeExp)



state 136

    $   	go to state 137



state 137

    $   	go to state 138



state 138

    $default	accept
