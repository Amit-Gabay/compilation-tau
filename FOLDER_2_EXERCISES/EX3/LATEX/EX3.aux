\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Programming Assignment}{1}{section.2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}The RioMare Semantics}{1}{section.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Types}{1}{subsection.3.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.1}Classes}{2}{subsubsection.3.1.1}}
\newlabel{subsubsection_Classes}{{3.1.1}{2}{Classes}{subsubsection.3.1.1}{}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Referring to classes, methods and data members }}{2}{table.1}}
\newlabel{Table_Code_Examples_Use_Before_Def}{{1}{2}{Referring to classes, methods and data members}{table.1}{}}
\@writefile{toc}{\contentsline {paragraph}{Methods overloading}{3}{section*.1}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Method overloading and variable shadowing are both illegal in RioMare. }}{3}{table.2}}
\newlabel{Table_Code_Examples_Overload_Override}{{2}{3}{Method overloading and variable shadowing are both illegal in RioMare}{table.2}{}}
\@writefile{toc}{\contentsline {paragraph}{Inheritance}{4}{section*.2}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces new Son is a semantically valid input for foo. }}{4}{table.3}}
\newlabel{Table_Code_Examples_Son_Class_Instead_Of_Father_Class}{{3}{4}{new Son is a semantically valid input for foo}{table.3}{}}
\@writefile{toc}{\contentsline {paragraph}{Null expressions}{4}{section*.3}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces NULL sent instead of a (Father) class is semantically allowed. }}{4}{table.4}}
\newlabel{Table_Code_Examples_NULL_Instead_Of_Any_Class}{{4}{4}{NULL sent instead of a (Father) class is semantically allowed}{table.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2}Arrays}{4}{subsubsection.3.1.2}}
\newlabel{subsubsection_Arrays}{{3.1.2}{4}{Arrays}{subsubsection.3.1.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces NULL sent instead of an integer array is semantically allowed. }}{4}{table.5}}
\newlabel{Table_Code_Examples_NULL_Instead_Of_Any_Array}{{5}{4}{NULL sent instead of an integer array is semantically allowed}{table.5}{}}
\@writefile{toc}{\contentsline {paragraph}{Note}{4}{section*.4}}
\@writefile{lot}{\contentsline {table}{\numberline {6}{\ignorespaces Non interchangeable array types. }}{5}{table.6}}
\newlabel{Table_Code_Examples_NULL_Instead_Of_Any_Array}{{6}{5}{Non interchangeable array types}{table.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Asignments}{5}{subsection.3.2}}
\newlabel{subsection_Assignments}{{3.2}{5}{Asignments}{subsection.3.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {7}{\ignorespaces Assignments. }}{5}{table.7}}
\newlabel{Table_Code_Examples_Assignments}{{7}{5}{Assignments}{table.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Equality Testing}{6}{subsection.3.3}}
\newlabel{subsection_Equality_Testing}{{3.3}{6}{Equality Testing}{subsection.3.3}{}}
\@writefile{lot}{\contentsline {table}{\numberline {8}{\ignorespaces Equality testing. }}{6}{table.8}}
\newlabel{Table_Code_Examples_Equality_Testing}{{8}{6}{Equality testing}{table.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Binary Operations}{7}{subsection.3.4}}
\newlabel{subsection_Binary_Operations}{{3.4}{7}{Binary Operations}{subsection.3.4}{}}
\@writefile{lot}{\contentsline {table}{\numberline {9}{\ignorespaces Binary Operations. }}{7}{table.9}}
\newlabel{Table_Code_Examples_Binary_Operations}{{9}{7}{Binary Operations}{table.9}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Input}{7}{section.4}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Output}{7}{section.5}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Submission Guidelines}{7}{section.6}}
\@writefile{lot}{\contentsline {table}{\numberline {10}{\ignorespaces  Context free grammar for the RioMare programming language. }}{8}{table.10}}
\newlabel{Table_CFG_Of_RioMare}{{10}{8}{Context free grammar for the RioMare programming language}{table.10}{}}
\@writefile{toc}{\contentsline {paragraph}{Execution parameters}{8}{section*.5}}
